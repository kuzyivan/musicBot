import logging
# –£–±–∏—Ä–∞–µ–º –Ω–µ–Ω—É–∂–Ω—ã–π –∏–º–ø–æ—Ä—Ç (–≤—ã —É–∂–µ —Å–¥–µ–ª–∞–ª–∏)
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters

from bot.handlers import start, help_command, handle_download, handle_audio_recognition
from config import Config
from dotenv import load_dotenv

def setup_logging():
    Config.LOG_FILE.parent.mkdir(exist_ok=True)
    logging.basicConfig(
        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        level=logging.INFO,
        handlers=[
            logging.FileHandler(Config.LOG_FILE, mode="a"),
            logging.StreamHandler()
        ]
    )
    logging.getLogger("httpx").setLevel(logging.WARNING)
    logging.getLogger("telegram.ext").setLevel(logging.WARNING)

def main():
    load_dotenv()
    setup_logging()
    
    logger = logging.getLogger(__name__)
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # --- –í–ê–®–ò –£–õ–£–ß–®–ï–ù–ò–Ø –° –¢–ê–ô–ú-–ê–£–¢–ê–ú–ò (–û–°–¢–ê–í–õ–ï–ù–´) ---
    app = (
        ApplicationBuilder()
        .token(Config.BOT_TOKEN)
        .connect_timeout(30)
        .read_timeout(120)
        .write_timeout(120)
        .build()
    )
    # --- –ö–û–ù–ï–¶ –ë–õ–û–ö–ê –° –¢–ê–ô–ú-–ê–£–¢–ê–ú–ò ---

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("download", handle_download))
    
    # --- –û–ë–ù–û–í–õ–ï–ù–ò–ï –î–õ–Ø –ù–û–í–û–ô –õ–û–ì–ò–ö–ò –ó–î–ï–°–¨ ---
    app.add_handler(MessageHandler(
        # –≠—Ç–æ—Ç Regex —Ç–µ–ø–µ—Ä—å –ª–æ–≤–∏—Ç —Ç–æ–ª—å–∫–æ –Ω–∞—Å—Ç–æ—è—â–∏–µ –¥–æ–º–µ–Ω—ã qobuz.com –∏–ª–∏ spotify.com
        filters.TEXT & ~filters.COMMAND & filters.Regex(r"https?:\/\/([a-zA-Z0-9\-]+\.)*(qobuz\.com|spotify\.com)\/"), 
        handle_download
    ))
    # --- –ö–û–ù–ï–¶ –û–ë–ù–û–í–õ–ï–ù–ò–Ø ---
    
    app.add_handler(MessageHandler(filters.AUDIO | filters.VOICE, handle_audio_recognition))

    app.run_polling()

if __name__ == "__main__":
    main()