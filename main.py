import logging
# –£–±–∏—Ä–∞–µ–º –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–º–ø–æ—Ä—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º Defaults
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, Defaults

from bot.handlers import start, help_command, handle_download, handle_audio_recognition
from config import Config
from dotenv import load_dotenv

def setup_logging():
    Config.LOG_FILE.parent.mkdir(exist_ok=True)
    logging.basicConfig(
        format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        level=logging.INFO,
        handlers=[
            logging.FileHandler(Config.LOG_FILE, mode="a"),
            logging.StreamHandler()
        ]
    )
    logging.getLogger("httpx").setLevel(logging.WARNING)
    logging.getLogger("telegram.ext").setLevel(logging.WARNING)

def main():
    load_dotenv()
    setup_logging()
    
    logger = logging.getLogger(__name__)
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    
    # --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–î–ï–°–¨ ---
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Defaults —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º-–∞—É—Ç–∞–º–∏
    defaults = Defaults(
        connect_timeout=30,
        read_timeout=120,
        write_timeout=120,
    )
    
    # –ü–µ—Ä–µ–¥–∞–µ–º defaults –≤ ApplicationBuilder
    app = ApplicationBuilder().token(Config.BOT_TOKEN).defaults(defaults).build()
    # --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("download", handle_download))
    
    app.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND & filters.Regex(r"qobuz\.com/"), 
        handle_download
    ))
    app.add_handler(MessageHandler(filters.AUDIO | filters.VOICE, handle_audio_recognition))

    app.run_polling()

if __name__ == "__main__":
    main()