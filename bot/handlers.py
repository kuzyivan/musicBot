from telegram import Update
from telegram.ext import ContextTypes
from services.downloader import QobuzDownloader
from services.file_manager import FileManager
from config import Config
import logging
import re

logger = logging.getLogger(__name__)

# –°–ª–æ–≤–∞—Ä—å –∫–∞—á–µ—Å—Ç–≤ –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞: –æ—Ç –ª—É—á—à–µ–≥–æ –∫ —Ö—É–¥—à–µ–º—É
QUALITY_HIERARCHY = {
    "HI-RES (24-bit < 96kHz)": 7,
    "CD (16-bit)": 6,
    "MP3 (320 kbps)": 5,
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üéµ –ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É —Å–∫–∞—á–∏–≤–∞—Ç—å —Ç—Ä–µ–∫–∏ —Å Qobuz.\n"
        "–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /download <—Å—Å—ã–ª–∫–∞>"
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/download <—Å—Å—ã–ª–∫–∞> ‚Äî —Å–∫–∞—á–∞—Ç—å —Ç—Ä–µ–∫ —Å Qobuz\n"
        "/help ‚Äî —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥"
    )

async def handle_download(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = ""
    if context.args:
        url = context.args[0]
    elif update.message and update.message.text:
        url = update.message.text.strip()

    if not url:
        await update.message.reply_text("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫.")
        return

    chat_id = update.effective_chat.id
    if not re.match(r"https?://(www\.|open\.|play\.)?qobuz\.com/(.+)", url):
        await update.message.reply_text("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ Qobuz.")
        return

    downloader = QobuzDownloader()
    file_manager = FileManager()
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ü–∏–∫–ª–∞
    audio_file_to_send = None
    cover_file_to_send = None
    
    try:
        sent_message = await update.message.reply_text("‚è≥ –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫...")
        
        # --- –ù–æ–≤–∞—è –ª–æ–≥–∏–∫–∞: —Ü–∏–∫–ª –ø–µ—Ä–µ–±–æ—Ä–∞ –∫–∞—á–µ—Å—Ç–≤ ---
        for quality_name, quality_id in QUALITY_HIERARCHY.items():
            await context.bot.edit_message_text(
                chat_id=chat_id,
                message_id=sent_message.message_id,
                text=f"üíø –ü—Ä–æ–±—É—é —Å–∫–∞—á–∞—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ: {quality_name}..."
            )
            
            audio_file, cover_file = await downloader.download_track(url, quality_id)
            
            if not audio_file:
                logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ {quality_name}. –ü—Ä–æ–±—É—é —Å–ª–µ–¥—É—é—â–µ–µ.")
                continue

            size_mb = file_manager.get_file_size_mb(audio_file)
            
            if size_mb <= 48: # –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø–∞—Å –¥–æ 50 –ú–ë
                logger.info(f"–§–∞–π–ª –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ —Ä–∞–∑–º–µ—Ä—É ({size_mb:.2f} MB). –û—Ç–ø—Ä–∞–≤–ª—è–µ–º.")
                audio_file_to_send = audio_file
                cover_file_to_send = cover_file
                break # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞, —Ç–∞–∫ –∫–∞–∫ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ñ–∞–π–ª
            else:
                logger.warning(f"–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π ({size_mb:.2f} MB). –ü—Ä–æ–±—É—é –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∏–∂–µ.")
                file_manager.safe_remove(audio_file) # –£–¥–∞–ª—è–µ–º —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª
                if cover_file:
                    file_manager.safe_remove(cover_file)
        
        # --- –ö–æ–Ω–µ—Ü —Ü–∏–∫–ª–∞ ---

        if not audio_file_to_send:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª –¥–ª—è {url} —Å –ø–æ–¥—Ö–æ–¥—è—â–∏–º —Ä–∞–∑–º–µ—Ä–æ–º.")
            await context.bot.edit_message_text(
                chat_id=chat_id, message_id=sent_message.message_id, 
                text="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª. –í–æ–∑–º–æ–∂–Ω–æ, –¥–∞–∂–µ –≤ —Å–∞–º–æ–º –Ω–∏–∑–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ –æ–Ω —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –¥–ª—è Telegram."
            )
            return

        await context.bot.edit_message_text(
            chat_id=chat_id, message_id=sent_message.message_id,
            text="üì§ –§–∞–π–ª —Å–∫–∞—á–∞–Ω, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram..."
        )

        original_name = audio_file_to_send.name
        album_folder = audio_file_to_send.parent.name
        match = re.match(r"(?P<artist>.+?) - (?P<album>.+?) \((?P<year>\d{4})", album_folder)
        if match:
            artist, album, year = match.groups()
        else:
            artist, album, year = "Unknown Artist", "Unknown Album", "0000"

        track_title = re.sub(r"^\d+\.\s*", "", original_name.rsplit(".", 1)[0])
        ext = audio_file_to_send.suffix
        custom_filename = f"{artist.strip()} - {track_title.strip()} ({album.strip()}, {year.strip()}){ext}"
        
        with open(audio_file_to_send, 'rb') as f:
            await context.bot.send_audio(chat_id, f, filename=custom_filename)

        if cover_file_to_send:
            with open(cover_file_to_send, 'rb') as img:
                await context.bot.send_photo(chat_id, img)
        
        await context.bot.delete_message(chat_id, sent_message.message_id)

    except Exception as e:
        logger.exception("–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")
        await update.message.reply_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
    finally:
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Å—Ç–∞–ª–∏—Å—å
        if audio_file_to_send:
            file_manager.safe_remove(audio_file_to_send)
        if cover_file_to_send:
            file_manager.safe_remove(cover_file_to_send)
        logger.info("–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã.")