import logging
import os
from datetime import datetime
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters
)

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_USER_ID = int(os.getenv("ADMIN_USER_ID", "0"))

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
    handlers=[
        logging.FileHandler("music_bot.log"),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)


# --- –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ --- #

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    logger.info(f"/start –æ—Ç {user.id} ({user.username})")
    keyboard = [["/help", "/qobuz"], ["/track", "/download"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "üé∂ –ü—Ä–∏–≤–µ—Ç! –Ø KuzyMusicBot ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é —Ç—Ä–µ–∫–æ–≤ —Å Qobuz.\n–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫–æ–º–∞–Ω–¥—ã.",
        reply_markup=reply_markup
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ\n"
        "/help ‚Äî –ø–æ–º–æ—â—å\n"
        "/qobuz ‚Äî –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö\n"
        "/track <—Å—Å—ã–ª–∫–∞> ‚Äî –∏–Ω—Ñ–æ –æ —Ç—Ä–µ–∫–µ\n"
        "/download <—Å—Å—ã–ª–∫–∞> ‚Äî —Å–∫–∞—á–∞—Ç—å —Ç—Ä–µ–∫"
    )


async def qobuz_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üîä –Ø —É–º–µ—é —Å–∫–∞—á–∏–≤–∞—Ç—å —Ç—Ä–µ–∫–∏ —Å Qobuz –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ (–¥–æ 24-bit / 96kHz), "
        "–∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏. –ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É —á–µ—Ä–µ–∑ /track –∏–ª–∏ /download."
    )


async def track_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if len(context.args) != 1:
        await update.message.reply_text("‚ö†Ô∏è –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã. –ü—Ä–∏–º–µ—Ä: /track https://open.qobuz.com/track/12345")
        return
    link = context.args[0]
    await update.message.reply_text(f"üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—Ä–µ–∫–µ:\n{link}\n(–±—É–¥–µ—Ç –∏–∑–≤–ª–µ–∫–∞—Ç—å—Å—è –≤ –±—É–¥—É—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏)")


async def download_track(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if len(context.args) != 1:
        await update.message.reply_text("‚ö†Ô∏è –£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫. –ü—Ä–∏–º–µ—Ä: /download https://open.qobuz.com/track/12345")
        return
    link = context.args[0]
    await update.message.reply_text(f"‚¨áÔ∏è –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É —Ç—Ä–µ–∫–∞:\n{link}\n(—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ)")


# --- –ó–∞–ø—É—Å–∫ --- #

async def post_init(app):
    now = datetime.now().strftime("%Y-%m-%d %H:%M")
    logger.info(f"ü§ñ KuzyMusicBot –∑–∞–ø—É—â–µ–Ω –≤ {now}")
    if ADMIN_USER_ID:
        try:
            await app.bot.send_message(chat_id=ADMIN_USER_ID, text=f"ü§ñ KuzyMusicBot –∑–∞–ø—É—â–µ–Ω\nüïí {now}")
        except Exception as e:
            logger.warning(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: {e}")


def main():
    logger.info("üöÄ KuzyMusicBot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    app = ApplicationBuilder().token(BOT_TOKEN).post_init(post_init).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("qobuz", qobuz_info))
    app.add_handler(CommandHandler("track", track_info))
    app.add_handler(CommandHandler("download", download_track))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫
    async def error_handler(update, context):
        logger.error(f"‚ùó –û—à–∏–±–∫–∞: {context.error}")
        if update and update.message:
            await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –ø–æ–∑–∂–µ.")

    app.add_error_handler(error_handler)

    app.run_polling()


if __name__ == "__main__":
    main()