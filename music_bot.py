import logging
import os
from datetime import datetime
from dotenv import load_dotenv
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
)

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_USER_ID = int(os.getenv("ADMIN_USER_ID", "0"))

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO,
    handlers=[
        logging.FileHandler("music_bot.log"),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
main_keyboard = ReplyKeyboardMarkup(
    [["/qobuz", "/track"], ["/download", "/help"]],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥—ã
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    logger.info(f"/start –æ—Ç {user.id} ({user.username})")
    await update.message.reply_text(
        "üé∂ –ü—Ä–∏–≤–µ—Ç! –Ø KuzyMusicBot.\n"
        "–ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.",
        reply_markup=main_keyboard
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üÜò –ö–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫\n"
        "/qobuz ‚Äî –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Qobuz\n"
        "/track ‚Äî –ø–æ–ª—É—á–∏—Ç—å —Ç—Ä–µ–∫ –ø–æ —Å—Å—ã–ª–∫–µ\n"
        "/download ‚Äî –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ Qobuz\n"
        "/help ‚Äî —Å–ø—Ä–∞–≤–∫–∞"
    )

async def qobuz_info(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üéß Qobuz ‚Äî —ç—Ç–æ Hi-Res –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å. –í–≤–µ–¥–∏ —Å—Å—ã–ª–∫—É, –∏ —è –ø–æ–ø—Ä–æ–±—É—é –µ—ë —Å–∫–∞—á–∞—Ç—å.")

async def track_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîó –í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫ Qobuz. –í –±—É–¥—É—â–µ–º —è —Å–∫–∞—á–∞—é –µ–≥–æ –¥–ª—è —Ç–µ–±—è üòâ")

async def download_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("‚¨áÔ∏è –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!")

# –û—à–∏–±–∫–∏
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    logger.error("–û—à–∏–±–∫–∞:", exc_info=context.error)
    if isinstance(update, Update) and update.message:
        await update.message.reply_text("‚ö†Ô∏è –£–ø—Å! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")

# –ó–∞–ø—É—Å–∫
async def post_init(app):
    now = datetime.now().strftime("%Y-%m-%d %H:%M")
    logger.info(f"ü§ñ KuzyMusicBot –∑–∞–ø—É—â–µ–Ω –≤ {now}")
    if ADMIN_USER_ID:
        try:
            await app.bot.send_message(chat_id=ADMIN_USER_ID, text=f"ü§ñ KuzyMusicBot –∑–∞–ø—É—â–µ–Ω\nüïí {now}")
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: {e}")

def main():
    logger.info("üöÄ KuzyMusicBot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

    app = ApplicationBuilder().token(BOT_TOKEN).post_init(post_init).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("qobuz", qobuz_info))
    app.add_handler(CommandHandler("track", track_command))
    app.add_handler(CommandHandler("download", download_command))
    app.add_error_handler(error_handler)

    app.run_polling()

if __name__ == "__main__":
    main()