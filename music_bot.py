from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import subprocess
import os
import glob

# –ü—É—Ç—å –¥–æ —Ç–≤–æ–µ–≥–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
VENV_PYTHON = "/opt/qobuz-env/bin/python"
QOBUZ_DL = "/opt/qobuz-env/bin/qobuz-dl"
DOWNLOAD_DIR = os.path.expanduser("~/Qobuz Downloads")

async def download_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("üéµ –ü—Ä–∏—à–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç—Ä–µ–∫, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n/download https://open.qobuz.com/track/118882834")
        return

    url = context.args[0]
    await update.message.reply_text("‚è¨ –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É —Ç—Ä–µ–∫–∞... –ü—Ä–∏–≥–æ—Ç–æ–≤—å —É—à–∏ üëÇüî•")

    try:
        # –ó–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–µ–∫–∞
        subprocess.run([QOBUZ_DL, "dl", url], check=True)

        # –ü–æ–∏—Å–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
        audio_files = glob.glob(os.path.join(DOWNLOAD_DIR, "**", "*.flac"), recursive=True)
        cover_files = glob.glob(os.path.join(DOWNLOAD_DIR, "**", "cover.jpg"), recursive=True)

        if not audio_files:
            await update.message.reply_text("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏.")
            return

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞
        audio_path = audio_files[0]
        await context.bot.send_audio(chat_id=update.effective_chat.id, audio=open(audio_path, 'rb'))

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±–ª–æ–∂–∫–∏ (–µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω–∞)
        if cover_files:
            await context.bot.send_photo(chat_id=update.effective_chat.id, photo=open(cover_files[0], 'rb'))

        # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤
        for file_path in audio_files + cover_files:
            os.remove(file_path)

    except subprocess.CalledProcessError as e:
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—Ä–µ–∫–∞.")
        print(f"[ERROR] Qobuz download error: {e}")

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
app = ApplicationBuilder().token("–¢–í–û–ô_–¢–û–ö–ï–ù").build()
app.add_handler(CommandHandler("download", download_handler))

if __name__ == "__main__":
    app.run_polling()