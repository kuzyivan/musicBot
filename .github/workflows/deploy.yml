name: 🚀 Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: 🚀 Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            APP_DIR="/opt/musicBot"
            
            cd "$APP_DIR"

            # --- РЕШЕНИЕ ПРОБЛЕМЫ С "DUBIOUS OWNERSHIP" ---
            git config --global --add safe.directory "$APP_DIR"
            
            echo "🔄 Обновление кода из репозитория..."
            git fetch origin main
            git reset --hard origin/main
            git clean -fd

            echo "🤫 Создание .env файла из секретов..."
            echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > .env
            echo "QOBUZ_LOGIN=${{ secrets.QOBUZ_LOGIN }}" >> .env
            echo "QOBUZ_PASSWORD=${{ secrets.QOBUZ_PASSWORD }}" >> .env
            echo "AUDD_API_TOKEN=${{ secrets.AUDD_API_TOKEN }}" >> .env
            echo "SPOTIPY_CLIENT_ID=${{ secrets.SPOTIPY_CLIENT_ID }}" >> .env
            echo "SPOTIPY_CLIENT_SECRET=${{ secrets.SPOTIPY_CLIENT_SECRET }}" >> .env
            echo "✅ .env файл создан."

            # --- ИСПРАВЛЕНИЕ QOBUZ ---
            echo "⚙️ Создание конфигурации Qobuz..."
            QOBUZ_CONFIG_DIR="/opt/musicBot/home/.config/qobuz-dl"
            QOBUZ_CONFIG_FILE="$QOBUZ_CONFIG_DIR/config.ini"
            
            mkdir -p "$QOBUZ_CONFIG_DIR"
            
            cat > "$QOBUZ_CONFIG_FILE" <<- EOF
            [DEFAULT]
            email = ${{ secrets.QOBUZ_LOGIN }}
            password = ${{ secrets.QOBUZ_PASSWORD }}
            download_dir = 
            quality = 27
            EOF
            
            echo "✅ config.ini для Qobuz создан."
            # --- КОНЕЦ ИСПРАВЛЕНИЯ QOBUZ ---

            echo "🐍 Настройка виртуального окружения..."
            if [ ! -d "venv" ]; then
              python3.11 -m venv venv
            fi
            source venv/bin/activate

            echo "📦 Установка зависимостей Python..."
            pip install --upgrade pip
            pip install -r requirements.txt
            
            # --- ФИНАЛЬНОЕ ИСПРАВЛЕНИЕ SAVIFY ---
            echo "🔧 Установка YouTube загрузчиков..."
            # Полностью очищаем старые
            pip uninstall -y youtube-dl yt-dlp yt-dlp-compat-youtube-dl
            
            # Устанавливаем yt-dlp
            pip install -U yt-dlp
            
            # Устанавливаем АДАПТЕР, который притворится 'youtube_dl'
            pip install -U youtube-dl-compat-yt-dlp
            # --- КОНЕЦ ИСПРАВЛЕНИЯ SAVIFY ---

            echo "📁 Создание необходимых директорий..."
            mkdir -p logs
            mkdir -p Qobuz/Downloads
            
            echo "🔐 Установка прав доступа для пользователя musicbot..."
            chown -R musicbot:musicbot "$APP_DIR"

            echo "♻️ Перезапуск сервиса musicbot..."
            systemctl daemon-reload
            systemctl restart musicbot.service

            echo "✅ Развертывание успешно завершено!"